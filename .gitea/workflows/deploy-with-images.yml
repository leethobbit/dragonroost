name: Build and deploy Docker images for Dragonroost.
run-name: ${{ gitea.actor }} is running a Gitea Actions job on server ${{ runner.os }}

on:
  workflow_dispatch:
  push:
    branches:
      - 'develop'

jobs:
  build-push-images:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: ${{ secrets.REGISTRY_URL }}/${{ secrets.REGISTRY_USERNAME }}/dragonroost
            dockerfile: ./compose/local/django/Dockerfile
          - image: ${{ secrets.REGISTRY_URL }}/${{ secrets.REGISTRY_USERNAME }}/postgres
            dockerfile: ./compose/production/postgres/Dockerfile
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}

      - name: Login to Gitea registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # deploy-images:
  #   needs: build-push-images
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Login to Gitea registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ secrets.REGISTRY_URL }}
  #         username: ${{ secrets.REGISTRY_USERNAME }}
  #         password: ${{ secrets.REGISTRY_TOKEN }}

  #     - name: SSH into RPi and deploy Dragonroost.
  #       uses: appleboy/ssh-action@v1.2.0
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         password: ${{ secrets.SSH_PASSWORD }}
  #         port: ${{ secrets.SSH_PORT }}
  #         script: |
  #           cd /app/
  #           echo "Rebuilding and restarting Docker services."
  #           sudo docker compose -f docker-compose.yml pull && docker compose -f docker-compose.yml up -d
